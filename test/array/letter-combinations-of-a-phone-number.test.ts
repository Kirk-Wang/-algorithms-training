import { letterCombinations } from '../../src/algorithms-training'

describe('letterCombinations test', () => {
  it(`letterCombinations(23)`, () => {
    expect(letterCombinations(`23`)).toEqual(['ad', 'ae', 'af', 'bd', 'be', 'bf', 'cd', 'ce', 'cf'])
  })
  it(`letterCombinations(2348)`, () => {
    expect(letterCombinations(`2348`)).toEqual([
      'adgt',
      'adgu',
      'adgv',
      'adht',
      'adhu',
      'adhv',
      'adit',
      'adiu',
      'adiv',
      'aegt',
      'aegu',
      'aegv',
      'aeht',
      'aehu',
      'aehv',
      'aeit',
      'aeiu',
      'aeiv',
      'afgt',
      'afgu',
      'afgv',
      'afht',
      'afhu',
      'afhv',
      'afit',
      'afiu',
      'afiv',
      'bdgt',
      'bdgu',
      'bdgv',
      'bdht',
      'bdhu',
      'bdhv',
      'bdit',
      'bdiu',
      'bdiv',
      'begt',
      'begu',
      'begv',
      'beht',
      'behu',
      'behv',
      'beit',
      'beiu',
      'beiv',
      'bfgt',
      'bfgu',
      'bfgv',
      'bfht',
      'bfhu',
      'bfhv',
      'bfit',
      'bfiu',
      'bfiv',
      'cdgt',
      'cdgu',
      'cdgv',
      'cdht',
      'cdhu',
      'cdhv',
      'cdit',
      'cdiu',
      'cdiv',
      'cegt',
      'cegu',
      'cegv',
      'ceht',
      'cehu',
      'cehv',
      'ceit',
      'ceiu',
      'ceiv',
      'cfgt',
      'cfgu',
      'cfgv',
      'cfht',
      'cfhu',
      'cfhv',
      'cfit',
      'cfiu',
      'cfiv'
    ])
  })
  it(`letterCombinations(2349)`, () => {
    expect(letterCombinations(`2349`)).toEqual([
      'adgw',
      'adgx',
      'adgy',
      'adgz',
      'adhw',
      'adhx',
      'adhy',
      'adhz',
      'adiw',
      'adix',
      'adiy',
      'adiz',
      'aegw',
      'aegx',
      'aegy',
      'aegz',
      'aehw',
      'aehx',
      'aehy',
      'aehz',
      'aeiw',
      'aeix',
      'aeiy',
      'aeiz',
      'afgw',
      'afgx',
      'afgy',
      'afgz',
      'afhw',
      'afhx',
      'afhy',
      'afhz',
      'afiw',
      'afix',
      'afiy',
      'afiz',
      'bdgw',
      'bdgx',
      'bdgy',
      'bdgz',
      'bdhw',
      'bdhx',
      'bdhy',
      'bdhz',
      'bdiw',
      'bdix',
      'bdiy',
      'bdiz',
      'begw',
      'begx',
      'begy',
      'begz',
      'behw',
      'behx',
      'behy',
      'behz',
      'beiw',
      'beix',
      'beiy',
      'beiz',
      'bfgw',
      'bfgx',
      'bfgy',
      'bfgz',
      'bfhw',
      'bfhx',
      'bfhy',
      'bfhz',
      'bfiw',
      'bfix',
      'bfiy',
      'bfiz',
      'cdgw',
      'cdgx',
      'cdgy',
      'cdgz',
      'cdhw',
      'cdhx',
      'cdhy',
      'cdhz',
      'cdiw',
      'cdix',
      'cdiy',
      'cdiz',
      'cegw',
      'cegx',
      'cegy',
      'cegz',
      'cehw',
      'cehx',
      'cehy',
      'cehz',
      'ceiw',
      'ceix',
      'ceiy',
      'ceiz',
      'cfgw',
      'cfgx',
      'cfgy',
      'cfgz',
      'cfhw',
      'cfhx',
      'cfhy',
      'cfhz',
      'cfiw',
      'cfix',
      'cfiy',
      'cfiz'
    ])
  })
})
